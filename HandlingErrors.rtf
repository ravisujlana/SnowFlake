{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0  // Create new stage\
 CREATE OR REPLACE STAGE MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    url='s3://bucketsnowflakes4';\
 \
 // List files in stage\
 LIST @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR;\
 \
 \
 // Create example table\
 CREATE OR REPLACE TABLE SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR (\
    ORDER_ID VARCHAR(30),\
    AMOUNT INT,\
    PROFIT INT,\
    QUANTITY INT,\
    CATEGORY VARCHAR(30),\
    SUBCATEGORY VARCHAR(30));\
 \
 // Demonstrating error message\
 COPY INTO SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR\
    FROM @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    file_format= (type = csv field_delimiter=',' skip_header=1)\
    files = ('OrderDetails_error.csv')\
    ON_ERROR = 'CONTINUE';\
    \
TRUNCATE TABLE SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR;\
\
// Error handling using the ON_ERROR option = ABORT_STATEMENT (default)\
COPY INTO SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR\
    FROM @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    file_format= (type = csv field_delimiter=',' skip_header=1)\
    files = ('OrderDetails_error.csv','OrderDetails_error2.csv')\
    ON_ERROR = 'ABORT_STATEMENT';\
\
TRUNCATE TABLE SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR;\
\
// Error handling using the ON_ERROR option = SKIP_FILE\
COPY INTO SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR\
    FROM @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    file_format= (type = csv field_delimiter=',' skip_header=1)\
    files = ('OrderDetails_error.csv','OrderDetails_error2.csv')\
    ON_ERROR = 'SKIP_FILE';\
TRUNCATE TABLE SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR;\
    \
 \
TRUNCATE TABLE SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR;    \
\
// Error handling using the ON_ERROR option = SKIP_FILE_<number>\
COPY INTO SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR\
    FROM @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    file_format= (type = csv field_delimiter=',' skip_header=1)\
    files = ('OrderDetails_error.csv','OrderDetails_error2.csv')\
    ON_ERROR = 'SKIP_FILE_2';    \
      \
  // Validating results and truncating table \
SELECT * FROM SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR;\
SELECT COUNT(*) FROM SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR;\
\
// Error handling using the ON_ERROR option = SKIP_FILE_<number>\
COPY INTO SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR\
    FROM @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    file_format= (type = csv field_delimiter=',' skip_header=1)\
    files = ('OrderDetails_error.csv','OrderDetails_error2.csv')\
    ON_ERROR = 'SKIP_FILE_0.5%'; \
  \
//Add Size Limit on copy\
COPY INTO SNOWFLAKE_LEARNING.PUBLIC.ORDERS_ERROR\
    FROM @MANAGE_COMMON_DB.EXT_STAGES.AWS_STAGE_ERROR\
    file_format= (type = csv field_delimiter=',' skip_header=1)\
    files = ('OrderDetails_error.csv','OrderDetails_error2.csv')\
    ON_ERROR = SKIP_FILE_3 \
    SIZE_LIMIT = 30;\
\
\
\
\
}